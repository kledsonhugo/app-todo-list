{"version":3,"file":"cIInfoProvider.js","sourceRoot":"","sources":["../../../src/utils/cIInfoProvider.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,MAAM,CAAN,IAAY,YAKX;AALD,WAAY,YAAY;IACtB,iCAAiB,CAAA;IACjB,2BAAW,CAAA;IACX,mCAAmB,CAAA;IACnB,kCAAkC;AACpC,CAAC,EALW,YAAY,KAAZ,YAAY,QAKvB;AAUD,MAAM,OAAO,cAAc;IACjB,MAAM,CAAC,eAAe;QAC5B,OAAO,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,KAAK,MAAM,CAAC;IAClD,CAAC;IAED,MAAM,CAAC,aAAa;QAClB,IAAI,cAAc,CAAC,eAAe,EAAE,EAAE,CAAC;YACrC,OAAO,YAAY,CAAC,MAAM,CAAC;QAC7B,CAAC;aAAM,IAAI,cAAc,CAAC,aAAa,EAAE,EAAE,CAAC;YAC1C,OAAO,YAAY,CAAC,GAAG,CAAC;QAC1B,CAAC;aAAM,CAAC;YACN,OAAO,YAAY,CAAC,OAAO,CAAC;QAC9B,CAAC;IACH,CAAC;IAED,MAAM,CAAC,SAAS;QACd,MAAM,UAAU,GAAG,cAAc,CAAC,aAAa,EAAE,CAAC;QAClD,IAAI,UAAU,KAAK,YAAY,CAAC,MAAM,EAAE,CAAC;YACvC,qCAAqC;YACrC,OAAO;gBACL,YAAY,EAAE,YAAY,CAAC,MAAM;gBACjC,MAAM,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,IAAI;gBACtC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,IAAI;gBAC3C,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,IAAI;gBAC3C,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;oBAC3C,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,WAAW,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE;oBAC/G,CAAC,CAAC,IAAI;aACT,CAAC;QACJ,CAAC;aAAM,IAAI,UAAU,KAAK,YAAY,CAAC,GAAG,EAAE,CAAC;YAC3C,mCAAmC;YACnC,OAAO;gBACL,YAAY,EAAE,YAAY,CAAC,GAAG;gBAC9B,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,IAAI,IAAI;gBACjD,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,IAAI,IAAI;gBACjD,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,IAAI,IAAI;gBACpD,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC;oBAC5D,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,SAAS,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,WAAW,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,EAAE;oBACtL,CAAC,CAAC,IAAI;aACT,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,iCAAiC;YACjC,OAAO;gBACL,YAAY,EAAE,YAAY,CAAC,OAAO;gBAClC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,IAAI;gBACrC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,IAAI;gBACrC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,IAAI;gBAC1C,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,IAAI;aACjD,CAAC;QACJ,CAAC;IACH,CAAC;IAEO,MAAM,CAAC,aAAa;QAC1B,OAAO,CACL,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,KAAK,SAAS,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,SAAS,CAC5F,CAAC;IACJ,CAAC;IAEO,MAAM,CAAC,eAAe;QAC5B,IACE,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,KAAK,cAAc;YACnD,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,KAAK,qBAAqB,EAC1D,CAAC;YACD,OAAO,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAE,CAAC;QACzC,CAAC;aAAM,CAAC;YACN,OAAO,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAE,CAAC;QACzC,CAAC;IACH,CAAC;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nexport enum CI_PROVIDERS {\n  GITHUB = \"GITHUB\",\n  ADO = \"ADO\",\n  DEFAULT = \"DEFAULT\",\n  // Add more CI providers as needed\n}\n\nexport type CIInfo = {\n  providerName?: CI_PROVIDERS | null;\n  branch?: string | null;\n  author?: string | null;\n  commitId?: string | null;\n  revisionUrl?: string | null;\n};\n\nexport class CIInfoProvider {\n  private static isGitHubActions(): boolean {\n    return process.env[\"GITHUB_ACTIONS\"] === \"true\";\n  }\n\n  static getCIProvider(): string | null {\n    if (CIInfoProvider.isGitHubActions()) {\n      return CI_PROVIDERS.GITHUB;\n    } else if (CIInfoProvider.isAzureDevOps()) {\n      return CI_PROVIDERS.ADO;\n    } else {\n      return CI_PROVIDERS.DEFAULT;\n    }\n  }\n\n  static getCIInfo(): CIInfo {\n    const ciProvider = CIInfoProvider.getCIProvider();\n    if (ciProvider === CI_PROVIDERS.GITHUB) {\n      // Logic to get GitHub Actions CIInfo\n      return {\n        providerName: CI_PROVIDERS.GITHUB,\n        branch: this.getGHBranchName() || null,\n        author: process.env[\"GITHUB_ACTOR\"] || null,\n        commitId: process.env[\"GITHUB_SHA\"] || null,\n        revisionUrl: process.env[\"GITHUB_SERVER_URL\"]\n          ? `${process.env[\"GITHUB_SERVER_URL\"]}/${process.env[\"GITHUB_REPOSITORY\"]}/commit/${process.env[\"GITHUB_SHA\"]}`\n          : null,\n      };\n    } else if (ciProvider === CI_PROVIDERS.ADO) {\n      // Logic to get Azure DevOps CIInfo\n      return {\n        providerName: CI_PROVIDERS.ADO,\n        branch: process.env[\"BUILD_SOURCEBRANCH\"] || null,\n        author: process.env[\"BUILD_REQUESTEDFOR\"] || null,\n        commitId: process.env[\"BUILD_SOURCEVERSION\"] || null,\n        revisionUrl: process.env[\"SYSTEM_TEAMFOUNDATIONCOLLECTIONURI\"]\n          ? `${process.env[\"SYSTEM_TEAMFOUNDATIONCOLLECTIONURI\"]}${process.env[\"SYSTEM_TEAMPROJECT\"]}/_git/${process.env[\"BUILD_REPOSITORY_NAME\"]}/commit/${process.env[\"BUILD_SOURCEVERSION\"]}`\n          : null,\n      };\n    } else {\n      // Handle unsupported CI provider\n      return {\n        providerName: CI_PROVIDERS.DEFAULT,\n        branch: process.env[\"BRANCH\"] ?? null,\n        author: process.env[\"AUTHOR\"] ?? null,\n        commitId: process.env[\"COMMIT_ID\"] ?? null,\n        revisionUrl: process.env[\"REVISION_URL\"] ?? null,\n      };\n    }\n  }\n\n  private static isAzureDevOps(): boolean {\n    return (\n      process.env[\"AZURE_HTTP_USER_AGENT\"] !== undefined && process.env[\"TF_BUILD\"] !== undefined\n    );\n  }\n\n  private static getGHBranchName(): string {\n    if (\n      process.env[\"GITHUB_EVENT_NAME\"] === \"pull_request\" ||\n      process.env[\"GITHUB_EVENT_NAME\"] === \"pull_request_target\"\n    ) {\n      return process.env[\"GITHUB_HEAD_REF\"]!;\n    } else {\n      return process.env[\"GITHUB_REF_NAME\"]!;\n    }\n  }\n}\n"]}