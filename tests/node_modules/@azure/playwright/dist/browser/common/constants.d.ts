export declare const EntraIdAccessTokenConstants: {
    LIFETIME_LEFT_THRESHOLD_IN_MINUTES_FOR_ROTATION: number;
    SCOPE: string;
    ROTATION_INTERVAL_PERIOD_IN_MINUTES: number;
};
/** @public
 *
 * OS types supported on Azure Playwright cloud hosted browsers
 */
export declare const ServiceOS: {
    readonly LINUX: "linux";
    readonly WINDOWS: "windows";
};
/** @public
 *
 * Authentication types supported on Azure Playwright
 */
export declare const ServiceAuth: {
    readonly ENTRA_ID: "ENTRA_ID";
    readonly ACCESS_TOKEN: "ACCESS_TOKEN";
};
/** @public
 *
 * Environment variables used by Azure Playwright
 */
export declare const ServiceEnvironmentVariable: {
    PLAYWRIGHT_SERVICE_ACCESS_TOKEN: string;
    PLAYWRIGHT_SERVICE_URL: string;
};
export declare const GitHubActionsConstants: {
    GIT_VERSION_COMMAND: string;
    GIT_REV_PARSE: string;
    GIT_COMMIT_MESSAGE_COMMAND: string;
};
export declare const DefaultConnectOptionsConstants: {
    DEFAULT_TIMEOUT: number;
    DEFAULT_SLOW_MO: number;
    DEFAULT_EXPOSE_NETWORK: string;
    DEFAULT_SERVICE_OS: "linux";
    DEFAULT_SERVICE_AUTH_TYPE: "ENTRA_ID";
};
export declare const SDKLanguage: {
    JAVASCRIPT: string;
    TYPESCRIPT: string;
    CSHARP: string;
};
export declare const RunConfigConstants: {
    TEST_FRAMEWORK_NAME: string;
    TEST_SDK_LANGUAGE: string;
    TEST_FRAMEWORK_RUNNERNAME: string;
};
export declare const Constants: {
    SevenDaysInMS: number;
    OneDayInMS: number;
    MinimumSupportedPlaywrightVersion: string;
    LatestAPIVersion: string;
    HTTP_CALL_TIMEOUT: number;
};
export declare const InternalEnvironmentVariables: {
    MPT_PLAYWRIGHT_VERSION: string;
    MPT_SETUP_FATAL_ERROR: string;
    MPT_SERVICE_RUN_NAME: string;
    MPT_API_VERSION: string;
    MPT_SERVICE_RUN_ID: string;
    MPT_CLOUD_HOSTED_BROWSER_USED: string;
    MPT_SERVICE_OS: string;
    ONE_TIME_OPERATION_FLAG: string;
    USING_SERVICE_CONFIG: string;
};
//# sourceMappingURL=constants.d.ts.map