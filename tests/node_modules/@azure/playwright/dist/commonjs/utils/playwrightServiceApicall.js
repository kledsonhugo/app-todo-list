"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlaywrightServiceApiCall = void 0;
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
const utils_js_1 = require("./utils.js");
const httpService_js_1 = require("../common/httpService.js");
const messages_js_1 = require("../common/messages.js");
const constants_js_1 = require("../common/constants.js");
/**
 * Makes a PATCH call to the Playwright workspaces Test Run API to create or update a test run.
 *
 * @param payload - The request payload (displayName, config, ciConfig, etc.).
 * @returns The parsed JSON response from the API.
 * @throws If the API call fails (non-2xx response).
 */
class PlaywrightServiceApiCall {
    httpService;
    constructor(httpService) {
        this.httpService = httpService ?? new httpService_js_1.HttpService();
    }
    async patchTestRunAPI(payload) {
        const baseUrl = (0, utils_js_1.getTestRunApiUrl)();
        const token = (0, utils_js_1.getAccessToken)();
        if (!token) {
            throw new Error("PLAYWRIGHT_SERVICE_ACCESS_TOKEN environment variable is not set.");
        }
        const url = new URL(baseUrl);
        url.searchParams.set("api-version", constants_js_1.Constants.LatestAPIVersion);
        const method = "PATCH";
        const data = JSON.stringify(payload);
        const contentType = "application/merge-patch+json";
        const correlationId = crypto.randomUUID();
        const response = await this.httpService.callAPI(method, url.toString(), data, token, contentType, correlationId);
        if (response.status !== 200) {
            const errorMessage = (0, utils_js_1.extractErrorMessage)(response?.bodyAsText ?? "");
            (0, utils_js_1.exitWithFailureMessage)(messages_js_1.ServiceErrorMessageConstants.FAILED_TO_CREATE_TEST_RUN, errorMessage);
        }
        console.log("Test run created successfully.");
        return response.bodyAsText ? JSON.parse(response.bodyAsText) : {};
    }
}
exports.PlaywrightServiceApiCall = PlaywrightServiceApiCall;
//# sourceMappingURL=playwrightServiceApicall.js.map