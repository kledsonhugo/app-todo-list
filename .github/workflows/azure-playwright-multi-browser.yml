name: Azure Playwright - Multi-Browser

# on:
#   workflow_dispatch:
#     inputs:
#       browsers:
#         description: 'Browsers to test on Azure'
#         required: true
#         default: 'chromium,firefox,webkit'
#         type: choice
#         options:
#         - 'chromium'
#         - 'firefox'
#         - 'webkit'
#         - 'chromium,firefox,webkit'
#       workers:
#         description: 'Number of workers'
#         required: false
#         default: '4'
#         type: string

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ test ]

env:
  DOTNET_VERSION: '8.0.x'
  NODE_VERSION: '20'
  PLAYWRIGHT_SERVICE_URL: ${{ secrets.PLAYWRIGHT_SERVICE_URL }}
  PLAYWRIGHT_SERVICE_ACCESS_TOKEN: ${{ secrets.PLAYWRIGHT_SERVICE_ACCESS_TOKEN }}

jobs:
  test-strategy:
    name: Azure Playwright Test Strategy
    runs-on: ubuntu-latest
    outputs:
      browsers: ${{ steps.browsers.outputs.list }}
    steps:
    - name: Set browser list for Azure
      id: browsers
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          BROWSERS="${{ github.event.inputs.browsers }}"
        else
          BROWSERS="chromium,firefox,webkit"
        fi
        echo "list=[\"$(echo $BROWSERS | sed 's/,/\",\"/g')\"]" >> $GITHUB_OUTPUT

  azure-multi-browser-tests:
    name: Azure Test on ${{ matrix.browser }}
    runs-on: ubuntu-latest
    needs: test-strategy
    timeout-minutes: 60
    permissions:
      contents: read
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        browser: ${{ fromJson(needs.test-strategy.outputs.browsers) }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'tests/package.json'

    - name: Restore .NET dependencies
      run: dotnet restore app-todo-list.sln

    - name: Build .NET application
      run: dotnet build app-todo-list.sln --no-restore

    - name: Install Node.js dependencies
      working-directory: tests
      run: npm install

    - name: Authenticate with Azure
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Start application in background
      run: |
        dotnet run --project TodoListApp.csproj &
        echo "APP_PID=$!" >> $GITHUB_ENV
      env:
        ASPNETCORE_ENVIRONMENT: Production
        ASPNETCORE_URLS: http://localhost:5146

    - name: Wait for application to be ready
      run: |
        echo "Checking application startup for Azure Playwright (${{ matrix.browser }})..."
        
        # Aguardar processo iniciar
        sleep 3
        
        # Health check com timeout maior para Azure
        for attempt in {1..20}; do
          echo "Attempt $attempt: Checking health..."
          
          if nc -z localhost 5146 2>/dev/null; then
            if curl -f -s --max-time 5 http://localhost:5146/api/todos > /dev/null; then
              echo "Application is ready for Azure Playwright!"
              break
            fi
          fi
          
          if [ $attempt -lt 20 ]; then
            delay=$((attempt <= 5 ? 1 : 2))
            sleep $delay
          fi
        done
        
        # Verificação final
        if ! curl -f -s --max-time 15 http://localhost:5146/api/todos > /dev/null; then
          echo "Application failed to start properly"
          exit 1
        fi

    - name: Run Azure Playwright tests on ${{ matrix.browser }}
      working-directory: tests
      run: npx playwright test --project=${{ matrix.browser }} --config=playwright.azure.multi.config.ts --reporter=html
      env:
        CI: true
        PLAYWRIGHT_WORKERS: ${{ github.event.inputs.workers || '8' }}
        PLAYWRIGHT_HTML_REPORT: azure-multi-${{ matrix.browser }}

    - name: Stop application
      if: always()
      run: |
        if [ ! -z "$APP_PID" ]; then
          kill $APP_PID || true
        fi

    - name: Upload Azure test results for ${{ matrix.browser }}
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: azure-multi-${{ matrix.browser }}
        path: tests/azure-multi-${{ matrix.browser }}/
        retention-days: 30