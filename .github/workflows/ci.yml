name: 'CI/CD Todo List'

on:
  push:
    branches: [ main, develop, test ]
  pull_request:
    branches: [ main, develop, test ]

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  build-and-test:
    name: 'Build e Testes'
    runs-on: ubuntu-latest
    
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v4

    - name: 'Setup .NET'
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 'Cache NuGet packages'
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: 'Restore dependencies'
      run: dotnet restore app-todo-list.sln

    - name: 'Build solution'
      run: dotnet build app-todo-list.sln --no-restore --configuration Release

    - name: 'Format check'
      run: dotnet format app-todo-list.sln --verify-no-changes

    - name: 'Test aplicação (smoke test)'
      run: |
        dotnet run --project TodoListApp.csproj --configuration Release --no-build &
        APP_PID=$!
        sleep 10
        
        # Test API endpoints
        response=$(curl -s http://localhost:5146/api/todos || echo "FAILED")
        if [[ $response == *"Estudar .NET"* ]]; then
          echo "✅ API funcionando corretamente"
        else
          echo "❌ API não está respondendo"
          kill $APP_PID
          exit 1
        fi
        
        # Test web interface
        web_response=$(curl -s http://localhost:5146 || echo "FAILED")
        if [[ $web_response == *"Minha Lista de Tarefas"* ]]; then
          echo "✅ Interface web carregando"
        else
          echo "❌ Interface web com problemas"
          kill $APP_PID
          exit 1
        fi
        
        kill $APP_PID
        echo "✅ Todos os testes básicos passaram"

  docker-build:
    name: 'Build Docker'
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v4
      
    - name: 'Build Docker image'
      run: |
        docker build -t todolist:latest .
      continue-on-error: true